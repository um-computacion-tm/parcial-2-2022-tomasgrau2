import unittest
from compress import Compress


class TestCompress(unittest.TestCase):

    def setUp(self):
        with open('tdd.txt') as file:
            self.text_1 = file.read()
        self.compressed_1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 17, 24, 25, 26, 14, 27, 28, 29, 30, 31, 7, 32, 33, 24, 25, 34, 35, 11, 36, 37, 38, 39, 40, 41, 25, 42, 43, 42, 44, 42, 45, 46, 10, 47, 48, 16, 24, 49, 50, 51, 52, 53, 54, 55, 16, 56, 1, 57, 58, 59,
                             12, 60, 61, 62, 42, 63, 64, 10, 65, 66, 67, 16, 28, 68, 46, 69, 70, 71, 72, 73, 41, 74, 75, 76, 77, 16, 35, 78, 79, 80, 16, 81, 15, 82, 16, 81, 83, 36, 84, 85, 46, 86, 87, 88, 89, 46, 90, 91, 61, 92, 93, 94, 95, 96, 97, 14, 98, 99, 41, 100, 53, 82, 10, 101, 102, 103, 53, 104, 46, 105, 106, 1, 16, 107]
        self.values_1 = {'TDD': 1, 'o': 2, 'Test-Driven': 3, 'Development': 4, '(desarrollo': 5, 'dirigido': 6, 'por': 7, 'tests)': 8, 'es': 9, 'una': 10, 'práctica': 11, 'de': 12, 'programación': 13, 'que': 14, 'consiste': 15, 'en': 16, 'escribir': 17, 'primero': 18, 'las': 19, 'pruebas': 20, '(generalmente': 21, 'unitarias),': 22, 'después': 23, 'el': 24, 'código': 25, 'fuente': 26, 'pase': 27, 'la': 28, 'prueba': 29, 'satisfactoriamente': 30, 'y,': 31, 'último,': 32, 'refactorizar': 33, 'escrito.\nCon': 34, 'esta': 35, 'se': 36, 'consigue,': 37, 'entre': 38, 'otras': 39, 'cosas,': 40, 'un': 41, 'más': 42, 'robusto,': 43, 'seguro,': 44, 'mantenible': 45, 'y': 46, 'mayor': 47, 'rapidez': 48, 'desarrollo.\nEn': 49, 'este': 50, 'post': 51, 'voy': 52, 'a': 53, 'centrarme': 54,
                         'solamente': 55, 'cómo': 56, 'afecta': 57, 'al': 58, 'diseño': 59, 'software,': 60, 'si': 61, 'queréis': 62, 'información,': 63, 'hay': 64, 'introducción': 65, 'bastante': 66, 'buena': 67, 'Wikipedia': 68, 'Carlos': 69, 'Blé': 70, 'tiene': 71, 'disponible': 72, 'online': 73, 'libro': 74, 'muy': 75, 'completo.': 76, 'Además,': 77, 'infografía': 78, 'os': 79, 'contamos': 80, 'qué': 81, 'TDD,': 82, 'principios': 83, 'basa': 84, '(SOLID)': 85, 'cuáles': 86, 'son': 87, 'sus': 88, 'ventajas': 89, 'desventajas.': 90, 'Y,': 91, 'quieres': 92, 'profundizar': 93, 'aún': 94, 'más,': 95, 'te': 96, 'recomendamos': 97, 'le': 98, 'eches': 99, 'vistazo': 100, 'metodología': 101, 'para': 102, 'gobernarlos': 103, 'todos': 104, 'Molecule:': 105, 'desarrollo': 106, 'Ansible.': 107}
        with open('oop.txt') as file:
            self.text_2 = file.read()
        self.compressed_2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 11, 21, 22, 5, 23, 4, 24, 25, 26, 27, 28, 14, 29, 2, 30, 31, 32, 33, 34, 13, 35, 8, 36, 37, 38, 39, 40, 11, 41, 14, 42, 4, 43, 44, 45, 46, 47, 4, 13, 48, 14, 42, 49, 50, 4, 51, 52, 26, 53, 54, 8, 15, 55, 56, 26, 57, 58, 8, 42, 59, 60, 61, 62, 63, 62, 64, 14, 20, 65, 21, 47, 20, 64, 66, 67, 8, 68, 69, 4, 70, 14, 5, 71, 72, 2, 73, 13, 35, 8, 36, 11, 74, 20, 75, 14, 76, 4, 24, 77, 4, 13, 78, 79, 4, 80, 81, 4, 82, 11, 83, 2, 73, 41, 84, 14, 5, 13, 35, 8, 36, 11, 85, 86, 87, 5, 13, 35, 8, 36, 11, 88, 14, 15, 89, 11, 90, 91, 89, 11, 92, 93, 94, 4, 5, 95, 11, 96, 42, 97, 4, 98, 4, 99, 4, 100, 81, 4, 82, 11, 101, 4, 102, 11, 103, 104, 8, 105, 42, 106, 107, 108, 109, 110, 15, 82, 11, 41, 111, 21, 112, 113, 114, 115, 116, 117, 117, 118, 113, 119, 120, 121, 122, 123, 117, 117, 124, 117, 117, 117, 117, 117, 117, 118, 113, 125, 117, 117, 126, 117, 117, 117, 117, 117, 117, 127, 128, 129, 130, 8, 131, 117, 117, 117, 117, 117, 117, 132, 123, 117, 117, 133, 118, 134, 135, 117, 117, 117, 117, 117, 117, 133, 118, 136, 135, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 137, 138, 139, 140, 120, 141, 131, 123, 117, 117, 117, 117, 117, 117, 142, 118, 143, 135, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 137, 138, 144, 140, 120, 141, 131, 117, 117, 145, 117, 117, 117, 117, 117, 117, 146, 147, 120, 148, 149, 117, 117, 117, 117, 117, 117, 150, 151, 14, 15, 152, 153, 4, 154, 155, 156, 11, 15, 157, 41, 26, 158, 11, 68, 159, 160, 161, 162, 163, 164, 165, 166, 20, 167, 168, 169, 170, 4, 171, 8, 172, 24, 173, 174, 175, 176, 177, 8, 169, 170, 178, 179, 180, 4, 181, 182, 183, 184, 15, 185, 186, 187, 188, 189, 190, 20, 191, 42, 192, 193, 194, 195, 196, 197, 198, 199, 5, 200, 14, 15, 201, 46, 202, 203, 204, 42, 205, 18, 206, 82, 66, 207, 208, 209, 26, 210, 18, 211, 21, 202, 4, 212, 213, 198, 63, 21, 202, 214, 4, 215, 216, 14, 217, 21, 218, 20, 219, 220, 5, 13, 35, 8, 221, 2, 73, 41, 222, 4, 223, 11, 5, 13, 35, 8, 224, 189, 225, 226, 20, 227, 228, 229, 230, 4, 231, 24, 232, 233, 234, 53, 195, 235, 61, 236, 237, 238, 42, 239, 4, 240, 178, 24, 241, 242, 243, 2, 73, 13, 35, 8, 36, 11, 244, 245, 246, 20, 247, 8, 15, 89, 248, 249, 86, 250, 24, 36, 8, 62, 251, 46, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 260, 262, 263, 264, 265, 4, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 26, 280, 281, 282, 11, 31, 20, 21, 283, 14, 284, 58, 285, 286, 42, 287, 288, 26, 289, 290, 291, 292, 46, 293, 294, 295, 296, 297, 298, 299, 300, 4, 301, 4, 302, 303, 195, 304, 305, 58, 306, 307, 4, 151, 308, 26, 309, 294, 310, 178, 5, 311, 312, 313, 9, 20, 66, 314, 8, 42, 315, 61, 316, 317, 318, 319, 15, 320, 4, 321, 322, 15, 323, 58, 324, 4, 325, 26, 326, 327, 328, 46, 329, 15, 330, 4, 321, 322, 15, 323, 26, 326, 331, 58, 332, 292, 4, 68, 333, 20, 334, 335, 242, 336, 337, 338, 339, 11, 5, 340, 4, 5, 13, 35, 8, 341, 14, 5, 13, 35, 8, 36, 11, 342, 13, 35, 8, 36, 10, 14, 15, 343, 4, 13, 11, 21, 20, 344, 345, 11, 346, 347, 111, 348, 343, 14, 42, 349, 20, 350, 5, 351, 2, 220, 352, 20, 353, 354, 4, 355, 356, 357, 8, 15, 358, 4, 242, 26, 359, 20, 87, 2, 220, 346, 178, 348, 89, 11, 41, 14, 42, 360, 361, 4, 266, 362, 26, 363, 364, 365, 345, 11, 24, 36, 111, 366, 367, 20, 189, 368, 61, 369, 370, 31, 371, 97, 53, 195, 15, 372, 338, 373, 24, 266, 362, 374, 375, 376, 377, 20, 24, 378, 379, 374, 375, 380, 381, 14, 21, 382, 383, 4, 5, 13, 35, 8, 384, 294, 385, 36, 20, 386, 266, 26, 387, 388, 389, 4, 390, 86, 87, 5, 13, 35, 8, 36, 11, 342, 391, 392, 393, 394, 395, 26, 396, 397, 398, 26, 399, 4, 41, 400, 401, 343, 2, 402, 162, 151, 403, 404, 405, 374, 406, 407, 408, 409, 26, 410, 31, 241, 411, 4, 412, 95, 11, 413, 4, 5, 391, 4, 414, 415, 416, 189, 417, 418, 198, 419, 5, 13, 35, 8, 36, 11, 420, 24, 77, 4, 13, 421, 400, 5, 422, 343, 14, 423, 46, 424, 425, 426, 391, 11, 74, 427, 428, 11, 62, 429, 430, 4, 431, 5, 432, 433, 434, 26, 435, 335, 77, 436, 437, 8, 36, 4, 438, 439, 58, 440, 441, 2, 5, 442, 35, 8, 384, 425, 443, 73, 444, 4, 445, 446, 4, 74, 447, 78, 448, 449, 450, 451, 433, 24, 77, 20, 452, 178, 453, 391, 189, 392, 454, 78, 455, 78, 456, 457, 458, 459, 460, 461, 4, 302, 462, 20, 338, 463, 78, 212, 11, 460, 464, 465, 466, 5, 467, 4, 15, 468, 13, 35, 8, 36, 189, 392, 469, 21, 151, 296, 5, 470, 4, 5, 471, 472, 473, 474, 20, 68, 151, 475, 78, 476, 26, 477, 478, 479, 24, 480, 314, 481, 78, 464, 482, 151, 20, 483, 484, 5, 72, 198, 5, 20, 5, 485, 14, 375, 78, 486, 20, 487, 488, 62, 78, 456, 489, 490, 491, 178, 15, 151, 457, 492, 490, 491, 178, 15, 151, 457, 493, 494, 495, 78, 496, 21, 473, 4, 497, 95, 189, 498, 8, 499, 21, 151, 500, 21, 82, 4, 501, 4, 502, 46, 473, 4, 401, 503, 504, 505, 506, 507, 450, 297, 133, 508, 11, 21, 509, 510, 511, 4, 512, 461, 4, 151, 66, 513, 151, 514, 26, 515, 516, 11, 5, 517, 4, 62, 489, 13, 35, 8, 36, 356, 204, 5, 518, 4, 519, 520, 5, 521, 11, 224, 522, 523, 524, 525, 4, 526, 527, 391, 528, 21, 529, 4, 51, 530, 110, 20, 227, 196, 4, 531, 178, 5, 355, 427, 345, 11, 24, 346, 111, 36, 532, 26, 533, 340, 534, 8, 42, 535, 536, 11, 537, 46, 538, 539, 540, 8, 5, 13, 35, 8, 541, 13, 539, 14, 21, 343, 78, 542, 198, 24, 543, 544, 14, 5, 438, 78, 545, 4, 402, 15, 546, 547, 548, 4, 549, 15, 82, 41, 4, 438, 550, 551, 458, 20, 552, 553, 18, 554, 42, 555, 4, 556, 26, 557, 31, 558, 4, 559, 8, 560, 15, 81, 4, 13, 539, 178, 15, 82, 4, 561, 113, 562, 113, 563, 113, 564, 565, 113, 566, 129, 567, 568, 122, 569, 117, 117, 570, 113, 571, 117, 117, 572, 573, 8, 131, 117, 117, 574, 575, 570, 136, 576, 117, 117, 133, 570, 577, 578, 117, 117, 117, 117, 117, 117, 146, 579, 580, 120, 581, 582, 117, 117, 117, 117, 117, 117, 133, 570, 583, 578, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 584, 585, 117, 117, 117, 117, 117, 117, 145, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 586, 587, 588, 570, 589, 590, 117, 117, 142, 570, 583, 591, 117, 117, 117, 117, 117, 117, 146, 579, 580, 120, 592, 582, 117, 117, 117, 117, 117,
                             117, 584, 585, 117, 117, 142, 570, 577, 593, 117, 117, 117, 117, 117, 117, 146, 579, 594, 120, 595, 582, 117, 117, 117, 117, 117, 117, 133, 570, 583, 593, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 584, 585, 117, 117, 117, 117, 117, 117, 145, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 586, 587, 588, 570, 589, 596, 151, 597, 598, 111, 15, 599, 4, 600, 601, 602, 15, 603, 26, 557, 189, 604, 21, 64, 605, 20, 606, 607, 4, 608, 158, 11, 5, 609, 294, 610, 611, 8, 612, 292, 4, 68, 613, 151, 614, 615, 616, 617, 618, 619, 620, 521, 621, 622, 215, 133, 623, 624, 4, 431, 26, 625, 391, 66, 626, 111, 627, 8, 172, 335, 628, 21, 82, 597, 629, 178, 630, 631, 189, 632, 188, 633, 457, 62, 634, 484, 635, 2, 636, 5, 13, 539, 26, 5, 13, 35, 8, 637, 638, 117, 117, 117, 117, 117, 117, 117, 639, 640, 117, 117, 117, 117, 117, 117, 117, 641, 642, 643, 644, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 645, 113, 646, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 647, 113, 648, 117, 117, 117, 117, 117, 117, 117, 641, 649, 650, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 639, 651, 133, 120, 652, 129, 653, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 133, 130, 654, 655, 656, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 657, 658, 659, 660, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 574, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 133, 652, 143, 661, 123, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 127, 662, 663, 664, 665, 123, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 666, 123, 117, 117, 117, 117, 117, 117, 117, 641, 667, 650, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 668, 652, 589, 669, 117, 117, 117, 117, 117, 117, 117, 123, 117, 117, 117, 117, 117, 117, 117, 641, 670, 650, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 671, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 133, 652, 577, 672, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 673, 579, 594, 120, 674, 582, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 133, 652, 583, 672, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 584, 585, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 145, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 675, 129, 567, 587, 676, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 677, 305, 567, 678, 679, 24, 242, 415, 66, 680, 178, 681, 682, 8, 62, 251, 46, 683, 151, 597, 684, 42, 685, 686, 687, 688, 689, 690, 38, 691, 26, 692, 38, 26, 693, 66, 400, 11, 24, 694, 695, 696, 71, 14, 697, 20, 698, 520, 5, 521, 699, 2, 700, 21, 291, 4, 701, 702, 549, 703, 704, 457, 705, 706, 707, 708, 709, 544, 635, 710, 711, 5, 712, 2, 24, 713, 457, 24, 714, 11, 715, 703, 685, 178, 21, 716, 717, 113, 718, 719, 113, 720, 721, 113, 722, 723, 569, 117, 117, 570, 113, 724, 129, 567, 568, 725, 726, 117, 117, 727, 573, 8, 131, 117, 728, 729, 730, 731, 732, 733, 117, 117, 734, 710, 735, 736, 737, 36, 4, 738, 4, 5, 685, 739, 26, 557, 740, 18, 696, 741, 4, 742, 605, 743, 20, 21, 744, 745, 746, 51, 747, 21, 748, 283, 178, 693, 749, 616, 344, 750, 5, 442, 46, 82, 481, 64, 178, 5, 751, 752, 66, 753, 42, 754, 755, 433, 5, 13, 35, 8, 36, 26, 5, 13, 756, 757, 758, 4, 759, 4, 760, 189, 761, 762, 763, 11, 622, 764, 525, 4, 151, 765, 11, 622, 766, 185, 767, 4, 151, 11, 768, 769, 198, 770, 4, 151, 4, 771, 758, 4, 772, 624, 4, 773, 774, 4, 775, 774, 4, 776, 78, 777, 11, 778, 779, 2, 780, 781, 782, 5, 432, 4, 783, 4, 24, 689, 784, 14, 785, 786, 391, 53, 787, 788, 11, 789, 790, 374, 635, 689, 99, 4, 220, 15, 791, 792, 793, 198, 794, 391, 66, 795, 11, 778, 796, 4, 797, 377, 20, 5, 13, 539, 14, 709, 2, 789, 798, 8, 24, 36, 799, 11, 800, 14, 15, 89, 11, 801, 802, 15, 803, 804, 805, 806, 95, 807, 21, 464, 465, 808, 809, 353, 66, 400, 810, 784, 11, 74, 66, 811, 812, 36, 2, 813, 814, 815, 14, 816, 11, 74, 807, 14, 15, 817, 5, 818, 4, 819, 820, 89, 11, 41, 14, 42, 361, 360, 4, 266, 362, 26, 363, 821, 822, 178, 51, 823, 4, 266, 11, 824, 825, 14, 42, 360, 4, 266, 826, 26, 378, 827, 828, 829, 830, 748, 831, 178, 24, 832, 24, 270, 24, 833, 31, 834, 26, 24, 835, 4, 836, 837, 21, 838, 4, 24, 690, 26, 24, 839, 26, 840, 690, 374, 841, 842, 843, 4, 24, 224, 377, 20, 24, 844, 374, 212, 20, 845, 290, 846, 8, 813, 15, 152, 847, 11, 21, 330, 4, 848, 365, 849, 850, 331, 58, 332, 11, 68, 851, 4, 852, 104, 8, 853, 178, 21, 330, 4, 41, 2, 854, 844, 26, 855, 856, 113, 857, 858, 859, 860, 861, 862, 863, 864, 5, 865, 866, 710, 740, 8, 15, 696, 4, 867, 868, 869, 21, 870, 4, 5, 825, 807, 11, 871, 872, 873, 457, 874, 5, 875, 876, 877, 858, 859, 878, 11, 31, 212, 879, 353, 66, 880, 178, 453, 881, 882, 392, 883, 21, 823, 4, 15, 884, 695, 885, 14, 5, 685, 8, 5, 20, 886, 21, 887, 888, 889, 890, 881, 891, 892, 172, 24, 690, 26, 844, 4, 15, 884, 893, 8, 894, 178, 5, 875, 895, 896, 897, 117, 898, 899, 900, 219, 901, 902, 4, 24, 690, 903, 4, 401, 904, 905, 906, 639, 889, 907, 908, 909, 5, 685, 8, 5, 20, 886, 21, 89, 910, 911, 20, 344, 912, 20, 62, 913, 20, 892, 5, 881, 914, 14, 21, 915, 916, 4, 15, 917, 918, 178, 172, 24, 388, 4, 919, 920, 172, 921, 690, 26, 844, 922, 11, 21, 609, 365, 883, 78, 923, 496, 24, 388, 4, 266, 799, 11, 5, 924, 925]
        self.values_2 = {'Guía': 1, 'para': 2, 'Principiantes': 3, 'de': 4, 'la': 5, 'Programación': 6, 'Orientada': 7, 'a': 8, 'Objetos': 9, '(POO)': 10, 'en': 11, 'Python\nLa': 12, 'programación': 13, 'es': 14, 'un': 15, 'arte.': 16, 'Y': 17, 'al': 18, 'igual': 19, 'que': 20, 'el': 21, 'arte,': 22, 'selección': 23, 'los': 24, 'pinceles': 25, 'y': 26, 'pinturas': 27, 'adecuados': 28, 'esencial': 29, 'producir': 30, 'las': 31, 'mejores': 32, 'obras.': 33, 'La': 34, 'orientada': 35, 'objetos': 36, '(POO': 37, '–': 38, 'Object-Oriented': 39, 'Programming)': 40, 'Python': 41, 'una': 42, 'esas': 43, 'habilidades.\nLa': 44, 'elección': 45, 'del': 46, 'lenguaje': 47, 'adecuado': 48, 'parte': 49, 'crucial': 50, 'cualquier': 51, 'proyecto,': 52, 'puede': 53, 'conducir': 54, 'desarrollo': 55, 'fluido': 56, 'agradable': 57, 'o': 58, 'completa': 59, 'pesadilla.': 60, 'Por': 61, 'lo': 62, 'tanto,': 63, 'mejor': 64, 'utilices': 65, 'se': 66, 'adapte': 67, 'tu': 68, 'caso': 69, 'uso.\nEsa': 70, 'principal': 71, 'razón': 72, 'aprender': 73, 'Python,': 74, 'además': 75, 'uno': 76, 'lenguajes': 77, 'más': 78, 'populares.\nTabla': 79, 'contenidos\nUn': 80, 'ejemplo': 81, 'programa': 82, 'Python\nRequisitos': 83, 'OOP\n¿Qué': 84, 'Python?\n¿Por': 85, 'qué': 86, 'utilizamos': 87, 'Python?\nTodo': 88, 'objeto': 89, 'Python\nTu': 90, 'primer': 91, 'Python\nLos': 92, '4': 93, 'pilares': 94, 'OOP': 95, 'Python\nConstruir': 96, 'calculadora': 97, 'resolución': 98, 'formas': 99, 'área\nUn': 100, 'Python\nAntes': 101, 'entrar': 102, 'materia,': 103, 'vamos': 104, 'plantear': 105, 'pregunta:': 106, '¿has': 107, 'escrito': 108, 'alguna': 109, 'vez': 110, 'como': 111, 'siguiente?\n\nsecret_number': 112, '=': 113, '20\n': 114, '\nwhile': 115, 'True:\n': 116, '': 117, 'number': 118, "input('Guess": 119, 'the': 120, 'number:': 121, "')\n": 122, '\n': 123, 'try:\n': 124, 'int(number)\n': 125, 'except:\n': 126, "print('Sorry": 127, 'that': 128, 'is': 129, 'not': 130, "number')\n": 131, 'continue\n': 132, 'if': 133, '!=': 134, 'secret_number:\n': 135, '>': 136, 'print(number,': 137, "'is": 138, 'greater': 139, 'than': 140, 'secret': 141, 'elif': 142, '<': 143, 'less': 144, 'else:\n': 145, "print('You": 146, 'guessed': 147, "number:',": 148, 'secret_number)\n': 149, 'break\n\nEste': 150, 'código': 151, 'simple': 152, 'adivinador': 153, 'números.': 154, 'Intenta': 155, 'copiarlo': 156, 'archivo': 157, 'ejecutarlo': 158, 'sistema.': 159, 'Cumple': 160, 'perfectamente': 161, 'su': 162, 'propósito.\nKinsta': 163, 'me': 164, 'mimó': 165, 'tanto': 166, 'ahora': 167, 'exijo': 168, 'ese': 169, 'nivel': 170, 'servicio': 171, 'todos': 172, 'proveedores.': 173, 'Nosotros': 174, 'también': 175, 'intentamos': 176, 'estar': 177, 'con': 178, 'nuestro': 179, 'soporte': 180, 'herramientas': 181, 'SaaS.\nPero': 182, 'aquí': 183, 'surge': 184, 'gran': 185, 'problema:': 186, '¿y': 187, 'si': 188, 'te': 189, 'pedimos': 190, 'implementes': 191, 'nueva': 192, 'función?': 193, 'Podría': 194, 'ser': 195, 'algo': 196, 'sencillo,': 197, 'por': 198, 'ejemplo:\n«Si': 199, 'entrada': 200, 'múltiplo': 201, 'número': 202, 'secreto,': 203, 'da': 204, 'pista': 205, 'usuario».\nEl': 206, 'volvería': 207, 'rápidamente': 208, 'complejo': 209, 'pesado': 210, 'aumentar': 211, 'funciones': 212, 'y,': 213, 'total': 214, 'condicionales': 215, 'anidados.\nEse': 216, 'precisamente': 217, 'problema': 218, 'intenta': 219, 'resolver': 220, 'objetos.\nRequisitos': 221, 'OOP\nAntes': 222, 'adentrarte': 223, 'objetos,': 224, 'recomendamos': 225, 'encarecidamente': 226, 'tengas': 227, 'unos': 228, 'conocimientos': 229, 'básicos': 230, 'Python.\nClasificar': 231, 'temas': 232, 'considerados': 233, '«básicos»': 234, 'difícil.': 235, 'ello,': 236, 'hemos': 237, 'diseñado': 238, 'hoja': 239, 'trucos': 240, 'principales': 241, 'conceptos': 242, 'necesarios': 243, 'Python.\nVariable:': 244, 'Nombre': 245, 'simbólico': 246, 'apunta': 247, 'específico': 248, '(veremos': 249, 'significan': 250, 'largo': 251, 'artículo).\nOperadores': 252, 'aritméticos:': 253, 'Suma': 254, '(+),': 255, 'resta': 256, '(-),': 257, 'multiplicación': 258, '(*),': 259, 'división': 260, '(/),': 261, 'entera': 262, '(//),': 263, 'módulo': 264, '(%).\nTipos': 265, 'datos': 266, 'incorporados:': 267, 'Numéricos': 268, '(enteros,': 269, 'flotantes,': 270, 'complejos),': 271, 'Secuencias': 272, '(cadenas,': 273, 'listas,': 274, 'tuplas),': 275, 'Booleanos': 276, '(Verdadero,': 277, 'Falso),': 278, 'Diccionarios': 279, 'Conjuntos.\nExpresiones': 280, 'booleanas:': 281, 'Expresiones': 282, 'resultado': 283, 'True': 284, 'False.\nCondicional:': 285, 'Evalúa': 286, 'expresión': 287, 'booleana': 288, 'realiza': 289, 'algún': 290, 'proceso': 291, 'dependiendo': 292, 'resultado.': 293, 'Se': 294, 'maneja': 295, 'mediante': 296, 'sentencias': 297, 'if/else.\nBucle:': 298, 'Ejecución': 299, 'repetida': 300, 'bloques': 301, 'código.': 302, 'Pueden': 303, 'bucles': 304, 'for': 305, 'while.\nFunciones:': 306, 'Bloque': 307, 'organizado': 308, 'reutilizable.': 309, 'crean': 310, 'palabra': 311, 'clave': 312, 'def.\nArgumentos:': 313, 'pasan': 314, 'función.': 315, 'ejemplo:': 316,
                         'sum([1,': 317, '2,': 318, '4])\nEjecuta': 319, 'script': 320, 'Python:': 321, 'Abre': 322, 'terminal': 323, 'línea': 324, 'comandos': 325, 'escribe': 326, '«python': 327, '<nombre': 328, 'archivo>».\nAbre': 329, 'shell': 330, 'python': 331, 'python3': 332, 'sistema.\nAhora': 333, 'tienes': 334, 'estos': 335, 'muy': 336, 'claros,': 337, 'puedes': 338, 'avanzar': 339, 'comprensión': 340, 'objetos.\n¿Qué': 341, 'Python?\nLa': 342, 'paradigma': 343, 'podemos': 344, 'pensar': 345, 'problemas': 346, 'complejos': 347, 'objetos.\nUn': 348, 'teoría': 349, 'proporciona': 350, 'base': 351, 'problemas.\nAsí': 352, 'cuando': 353, 'hablamos': 354, 'POO,': 355, 'nos': 356, 'referimos': 357, 'conjunto': 358, 'patrones': 359, 'colección': 360, 'única': 361, '(atributos)': 362, 'comportamiento': 363, '(métodos).': 364, 'Puedes': 365, 'cosas': 366, 'reales': 367, 'rodean.': 368, 'ejemplo,': 369, 'considera': 370, 'calculadoras:\nUna': 371, 'objeto.\nComo': 372, 'observar,': 373, 'son': 374, 'siempre': 375, 'sustantivos,': 376, 'mientras': 377, 'comportamientos': 378, '(método)': 379, 'verbos.\nEsta': 380, 'compartimentación': 381, 'concepto': 382, 'central': 383, 'objetos.': 384, 'construyen': 385, 'almacenan': 386, 'contienen': 387, 'tipos': 388, 'específicos': 389, 'funcionalidad.\n¿Por': 390, 'POO': 391, 'permite': 392, 'crear': 393, 'software': 394, 'seguro': 395, 'fiable.': 396, 'Muchos': 397, 'marcos': 398, 'bibliotecas': 399, 'utilizan': 400, 'este': 401, 'construir': 402, 'base.': 403, 'Algunos': 404, 'ejemplos': 405, 'Django,': 406, 'Kivy,': 407, 'pandas,': 408, 'NumPy': 409, 'TensorFlow.\nVeamos': 410, 'ventajas': 411, 'usar': 412, 'Python.\nVentajas': 413, 'Python\nLas': 414, 'siguientes': 415, 'razones': 416, 'harán': 417, 'optar': 418, 'utilizar': 419, 'Python.\nTodos': 420, 'modernos': 421, 'POO\nEste': 422, 'independiente': 423, 'lenguaje.': 424, 'Si': 425, 'aprendes': 426, 'podrás': 427, 'utilizarlo': 428, 'siguiente:\nJava\nPHP': 429, '(asegúrate': 430, 'leer': 431, 'comparación': 432, 'entre': 433, 'PHP': 434, 'Python)\nRuby\nJavascript\nC#\nKotlin\nTodos': 435, 'están': 436, 'orientados': 437, 'forma': 438, 'nativa': 439, 'incluyen': 440, 'opciones': 441, 'funcionalidad': 442, 'quieres': 443, 'cualquiera': 444, 'ellos': 445, 'después': 446, 'será': 447, 'fácil:': 448, 'encontrarás': 449, 'muchas': 450, 'similitudes': 451, 'trabajan': 452, 'objetos.\nLa': 453, 'codificar': 454, 'rápido\nCodificar': 455, 'rápido': 456, 'no': 457, 'significa': 458, 'escribir': 459, 'menos': 460, 'líneas': 461, 'Significa': 462, 'implementar': 463, 'tiempo': 464, 'sin': 465, 'comprometer': 466, 'estabilidad': 467, 'proyecto.\nLa': 468, 'reutilizar': 469, 'implementación': 470, 'abstracción.': 471, 'Este': 472, 'principio': 473, 'hace': 474, 'sea': 475, 'conciso': 476, 'legible.\nComo': 477, 'ya': 478, 'sabrás,': 479, 'programadores': 480, 'mucho': 481, 'leyendo': 482, 'escribiéndolo.': 483, 'Es': 484, 'legibilidad': 485, 'importante': 486, 'sacar': 487, 'características': 488, 'posible.\nLa': 489, 'productividad': 490, 'disminuye': 491, 'legible\nLa': 492, 'legible\nMás': 493, 'adelante': 494, 'verás': 495, 'sobre': 496, 'abstracción.\nLa': 497, 'ayuda': 498, 'evitar': 499, 'espagueti\n¿Recuerdas': 500, 'adivinación': 501, 'números': 502, 'artículo?\nSi': 503, 'sigues': 504, 'añadiendo': 505, 'funciones,': 506, 'tendrás': 507, 'anidadas': 508, 'futuro.': 509, 'Esta': 510, 'maraña': 511, 'interminables': 512, 'llama': 513, 'espagueti,': 514, 'deberías': 515, 'evitarla': 516, 'medida': 517, 'posibilidad': 518, 'comprimir': 519, 'toda': 520, 'lógica': 521, 'evitando': 522, 'así': 523, 'largos': 524, 'trozos': 525, 'if’s': 526, 'anidados.\nLa': 527, 'mejora': 528, 'análisis': 529, 'situación\nUna': 530, 'experiencia': 531, 'pequeños': 532, 'específicos.\nEsta': 533, 'conduce': 534, 'rápida': 535, 'puesta': 536, 'marcha': 537, 'proyecto.\nProgramación': 538, 'estructurada': 539, 'frente': 540, 'objetos\nLa': 541, 'utilizado': 542, 'principiantes': 543, 'porque': 544, 'sencilla': 545, 'pequeño': 546, 'programa.\nSe': 547, 'trata': 548, 'ejecutar': 549, 'secuencial.': 550, 'Eso': 551, 'le': 552, 'das': 553, 'ordenador': 554, 'lista': 555, 'tareas': 556, 'luego': 557, 'ejecutas': 558, 'arriba': 559, 'abajo.\nVeamos': 560, 'cafetería.\n\nsmall': 561, '2\nregular': 562, '5\nbig': 563, '6\n': 564, '\nuser_budget': 565, "input('What": 566, 'your': 567, 'budget?': 568, '\ntry:\n': 569, 'user_budget': 570, 'int(user_budget)\nexcept:\n': 571, "print('Please": 572, 'enter': 573, 'exit()\n': 574, '\nif': 575, '0:\n': 576, '>=': 577, 'big:\n': 578, 'can': 579, 'afford': 580, 'big': 581, "coffee')\n": 582, '==': 583, "print('It\\'s": 584, "complete')\n": 585, "print('Your": 586, 'change': 587, "is',": 588, '-': 589, 'big)\n': 590, 'regular:\n': 591, 'regular': 592, 'small:\n': 593, 'buy': 594, 'small': 595, 'small)\n\nEl': 596, 'anterior': 597, 'actúa': 598, 'vendedor': 599, 'cafetería.': 600, 'Te': 601, 'pedirá': 602, 'presupuesto': 603, '«venderá»': 604, 'café': 605, 'seas': 606, 'capaz': 607, 'comprar.\nIntenta': 608, 'terminal.': 609, 'ejecutará': 610, 'paso': 611, 'paso,': 612, 'entrada.\nEste': 613, 'funciona': 614, 'perfectamente,': 615, 'pero': 616, 'tenemos': 617, 'tres': 618, 'problemas:\nTiene': 619, 'mucha': 620, 'repetida.\nUtiliza': 621, 'muchos': 622, 'anidados.\nSerá': 623, 'difícil': 624, 'modificar.\nLa': 625, 'inventó': 626, 'solución': 627, 'problemas.\nVeamos': 628, 'implementado': 629, 'POO.': 630, 'No': 631, 'preocupes': 632, 'aún': 633, 'entiendes.': 634, 'solo': 635, 'comparar': 636, 'objetos.\n\nclass': 637, 'Coffee:\n': 638, '#': 639, 'Constructor\n': 640, 'def': 641, '__init__(self,': 642, 'name,': 643, 'price):\n': 644, 'self.name': 645, 'name\n': 646, 'self.price': 647, 'float(price)\n': 648, 'check_budget(self,': 649, 'budget):\n': 650, 'Check': 651, 'budget': 652, 'valid\n': 653, 'isinstance(budget,': 654, '(int,': 655, 'float)):\n': 656, "print('Enter": 657, 'float': 658, 'or': 659, "int')\n": 660, '0:': 661, 'you': 662, "don\\'t": 663, 'have': 664, "money')": 665, 'exit()': 666, 'get_change(self,': 667, 'return': 668, 'self.price\n': 669, 'sell(self,': 670, 'self.check_budget(budget)\n': 671, 'self.price:\n': 672, "print(f'You": 673, '{self.name}': 674, "print(f'Here": 675, "{self.get_change(budget)}$')\n\n": 676, "exit('Thanks": 677, "transaction')\n\nNota:": 678, 'Todos': 679, 'explicarán': 680, 'mayor': 681, 'profundidad': 682, 'artículo.\nEl': 683, 'representa': 684, 'clase': 685, 'llamada': 686, '«Coffee».': 687, 'Tiene': 688, 'dos': 689, 'atributos': 690, '«Name»': 691, '«Price»': 692, 'ambos': 693, 'métodos.': 694, 'El': 695, 'método': 696, '«Sell»,': 697, 'procesa': 698, 'necesaria': 699, 'completar': 700, 'venta.\nSi': 701, 'intentas': 702, 'esa': 703, 'clase,': 704, 'obtendrás': 705, 'ninguna': 706, 'salida.': 707, 'Ocurre': 708, 'principalmente': 709, 'estamos': 710, 'declarando': 711, '«plantilla»': 712, 'cafés,': 713, 'cafés': 714, 'sí.\nImplementemos': 715, 'siguiente': 716, 'código:\n\nsmall': 717, "Coffee('Small',": 718, '2)\nregular': 719, "Coffee('Regular',": 720, '5)\nbig': 721, "Coffee('Big',": 722, '6)\n': 723, "float(input('What": 724, "'))\nexcept": 725, 'ValueError:\n': 726, "exit('Please": 727, '\nfor': 728, 'coffee': 729, 'in': 730, '[big,': 731, 'regular,': 732, 'small]:\n': 733, 'coffee.sell(user_budget)\nAquí': 734, 'haciendo': 735, 'instancias,': 736, 'u': 737, 'café,': 738, '«Coffee»,': 739, 'llamando': 740, '«sell»': 741, 'cada': 742, 'hasta': 743, 'usuario': 744, 'pueda': 745, 'pagar': 746, 'opción.\n\nObtendremos': 747, 'mismo': 748, 'enfoques,': 749, 'ampliar': 750, 'POO.\n\nA': 751, 'continuación': 752, 'muestra': 753, 'tabla': 754, 'comparativa': 755, 'estructurada:\n\nOOP\tProgramación': 756, 'Estructurada\nMás': 757, 'fácil': 758, 'mantener\tDifícil': 759, 'mantener\nNo': 760, 'repitas': 761, '(DRY)\tCódigo': 762, 'repetido': 763, 'lugares\nPequeños': 764, 'reutilizados': 765, 'lugares\tUna': 766, 'cantidad': 767, 'pocos': 768, 'lugares\nEnfoque': 769, 'objetos\tEnfoque': 770, 'bloques\nMás': 771, 'depurar\tMás': 772, 'depurar\nGran': 773, 'curva': 774, 'aprendizaje\tUna': 775, 'aprendizaje': 776, 'sencilla\nUtilizado': 777, 'grandes': 778, 'proyectos\tOptimizado': 779, 'programas': 780, 'sencillos\nPara': 781, 'concluir': 782, 'paradigmas:\nNinguno': 783, 'paradigmas': 784, 'perfecto': 785, '(la': 786, 'resultar': 787, 'abrumadora': 788, 'proyectos': 789, 'sencillos).\nEstas': 790, 'problema;': 791, 'hay': 792, 'otras': 793, 'ahí.\nLa': 794, 'utiliza': 795, 'bases': 796, 'código,': 797, 'sencillos.\nPasemos': 798, 'incorporados': 799, 'Python.\nTodo': 800, 'Python\nTe': 801, 'diremos': 802, 'secreto:': 803, 'has': 804, 'estado': 805, 'usando': 806, 'todo': 807, 'darte': 808, 'cuenta.\nIncluso': 809, 'otros': 810, 'siguen': 811, 'utilizando': 812, 'hacer': 813, 'casi': 814, 'todo.\nEso': 815, 'porque,': 816, 'objeto.\nRecuerda': 817, 'definición': 818, 'objeto:': 819, 'Un': 820, '(métodos).\nEsto': 821, 'coincide': 822, 'tipo': 823, 'Python.\nUna': 824, 'cadena': 825, '(caracteres)': 826, '(upper(),': 827, 'lower(),': 828, 'etc.).': 829, 'Lo': 830, 'ocurre': 831, 'enteros,': 832, 'booleanos,': 833, 'listas': 834, 'diccionarios.\nAntes': 835, 'continuar,': 836, 'repasemos': 837, 'significado': 838, 'métodos.\nAtributos': 839, 'métodos\nLos': 840, 'variables': 841, 'internas': 842, 'dentro': 843, 'métodos': 844, 'producen': 845, 'comportamiento.\nVamos': 846, 'ejercicio': 847, 'Python.': 848, 'abrirlo': 849, 'escribiendo': 850, 'terminal.\nShell': 851, 'Python\nAhora,': 852, 'trabajar': 853, 'descubrir': 854, 'tipos.\n>>>': 855, 'kinsta': 856, "'Kinsta,": 857, 'Premium': 858, 'WordPress': 859, "hosting'\n>>>": 860, "kinsta.upper()\n'KINSTA,": 861, 'PREMIUM': 862, 'WORDPRESS': 863, "HOSTING'\nEn": 864, 'segunda': 865, 'línea,': 866, 'cadena,': 867, 'upper().': 868, 'Devuelve': 869, 'contenido': 870, 'mayúsculas.': 871, 'Sin': 872, 'embargo,': 873, 'cambia': 874, 'variable': 875, 'original.\n>>>': 876, "kinsta\n'Kinsta,": 877, "hosting'\nProfundicemos": 878, 'valiosas': 879, 'trabaja': 880, 'función': 881, 'type()': 882, 'obtener': 883, 'objeto.': 884, '«tipo»': 885, 'pertenece': 886, 'objeto.\n>>>': 887, 'type(kinsta)\n#': 888, 'class': 889, "'str'\nLa": 890, 'dir()': 891, 'devuelve': 892, 'Vamos': 893, 'probarlo': 894, 'kinsta.\n>>>': 895, "dir(kinsta)\n['__add__',": 896, "'__class__',": 897, '...........': 898, "'upper',": 899, "'zfill']\nAhora,": 900, 'imprimir': 901, 'algunos': 902, 'ocultos': 903, 'objeto.\n': 904, '>>>': 905, 'kinsta.__class__': 906, '‘str’': 907, 'e>\nEsto': 908, 'devolverá': 909, 'kinsta.': 910, 'Así': 911, 'decir': 912, 'único': 913, 'type': 914, 'atributo': 915, '__class__': 916, 'objeto.\nPuedes': 917, 'experimentar': 918, 'datos,': 919, 'descubriendo': 920, 'sus': 921, 'directamente': 922, 'información': 923, 'documentación': 924, 'oficial.': 925}
        with open('ci.txt') as file:
            self.text_3 = file.read()
        self.compressed_3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 5, 26, 27, 28, 4, 29, 30, 31, 4, 5, 30, 32, 33, 30, 34, 30, 35, 36, 37, 14, 38, 39, 30, 40, 41, 7, 30, 42, 43, 44, 45, 30, 46, 47, 48, 49, 32, 50, 51, 13, 52, 32, 33, 30, 34, 37, 14,
                             53, 54, 55, 56, 57, 58, 42, 59, 60, 61, 62, 63, 64, 65, 10, 66, 47, 67, 68, 34, 28, 69, 70, 30, 4, 71, 72, 30, 73, 30, 74, 75, 34, 76, 28, 67, 77, 78, 75, 79, 30, 80, 81, 72, 30, 73, 30, 74, 82, 57, 83, 13, 84, 85, 23, 42, 86, 64, 30, 87, 75, 88, 42, 63, 30, 89, 30, 90, 30, 91, 60, 92, 93]
        self.values_3 = {'¿En': 1, 'qué': 2, 'consiste': 3, 'la': 4, 'integración': 5, 'continua?\nCrea': 6, 'una': 7, 'metodología': 8, 'ágil': 9, 'para': 10, 'tu': 11, 'equipo': 12, 'con': 13, 'un': 14, 'feedback': 15, 'más': 16, 'rápido.': 17, 'Porque': 18, 'solo': 19, 'avanzas': 20, 'tan': 21, 'rápido': 22, 'como': 23, 'tus': 24, 'pruebas.\nLa': 25, 'continua': 26, '(CI)': 27, 'es': 28, 'práctica': 29, 'de': 30, 'automatizar': 31, 'los': 32, 'cambios': 33, 'código': 34, 'varios': 35, 'contribuidores': 36, 'en': 37, 'único': 38, 'proyecto': 39, 'software.': 40, 'Es': 41, 'las': 42, 'principales': 43, 'prácticas': 44, 'recomendadas': 45, 'DevOps,': 46, 'que': 47, 'permite': 48,
                         'a': 49, 'desarrolladores': 50, 'fusionar': 51, 'frecuencia': 52, 'repositorio': 53, 'central': 54, 'donde': 55, 'luego': 56, 'se': 57, 'ejecutan': 58, 'compilaciones': 59, 'y': 60, 'pruebas.': 61, 'Las': 62, 'herramientas': 63, 'automatizadas': 64, 'sirven': 65, 'verificar': 66, 'el': 67, 'nuevo': 68, 'correcto': 69, 'antes': 70, 'integración.\nUn': 71, 'sistema': 72, 'control': 73, 'versiones': 74, 'del': 75, 'fuente': 76, 'punto': 77, 'clave': 78, 'proceso': 79, 'CI.': 80, 'El': 81, 'también': 82, 'complementa': 83, 'otras': 84, 'comprobaciones': 85, 'pruebas': 86, 'calidad': 87, 'código,': 88, 'revisión': 89, 'estilo': 90, 'sintaxis': 91, 'mucho': 92, 'más.': 93}
        with open('cv.txt') as file:
            self.text_4 = file.read()
        self.compressed_4 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 3, 12, 13, 14, 15, 16, 9, 13, 15, 4, 17, 3, 18, 19, 20, 21, 22, 23, 11, 3, 24, 25, 26, 27, 28, 29, 30, 31, 13, 32, 33, 34, 35, 36, 26, 27, 10, 37, 38, 30, 4, 13, 39, 40, 21, 41, 36, 10, 37, 13, 42, 43, 44, 45, 32, 46, 47, 48, 49, 3, 50, 51, 3, 18, 52, 53, 26, 54, 34, 55, 6, 56, 3, 4, 57, 58, 59, 60, 26, 61, 4,
                             62, 2, 3, 4, 63, 64, 3, 65, 66, 67, 68, 26, 10, 11, 3, 12, 69, 1, 70, 71, 63, 72, 73, 74, 36, 75, 9, 76, 77, 78, 79, 9, 80, 2, 3, 4, 5, 6, 81, 9, 28, 82, 3, 83, 3, 65, 84, 3, 85, 86, 87, 13, 88, 13, 84, 3, 89, 90, 91, 73, 28, 92, 93, 3, 94, 95, 32, 96, 9, 97, 36, 98, 99, 100, 28, 2, 101, 30, 4, 5, 18, 102, 9, 65, 103, 3, 29, 3, 12, 104, 48, 105, 106, 107, 108, 109]
        self.values_4 = {'La': 1, 'cobertura': 2, 'de': 3, 'código': 4, 'es': 5, 'una': 6, 'medida': 7, '(porcentual)': 8, 'en': 9, 'las': 10, 'pruebas': 11, 'software': 12, 'que': 13, 'mide': 14, 'el': 15, 'grado': 16, 'fuente': 17, 'un': 18, 'programa': 19, 'ha': 20, 'sido': 21, 'comprobado': 22, 'con': 23, 'software.': 24, 'Sirve': 25, 'para': 26, 'determinar': 27, 'la': 28, 'calidad': 29, 'del': 30, 'test': 31, 'se': 32, 'lleve': 33, 'a': 34, 'cabo1\u200b': 35, 'y': 36, 'partes': 37, 'críticas': 38, 'no': 39, 'han': 40, 'comprobadas': 41, 'ya': 42, 'lo': 43, 'fueron,': 44, 'además': 45, 'puede': 46, 'utilizar': 47, 'como': 48, 'técnica': 49, 'optimización': 50, 'dentro': 51, 'compilador': 52, 'optimizador': 53, 'llevar': 54, 'cabo': 55, 'eliminación': 56, 'muerto,': 57, 'más': 58, 'específicamente': 59,
                         'sirve': 60, 'detectar': 61, 'inalcanzable.\n\nLa': 62, 'fue': 63, 'uno': 64, 'los': 65, 'primeros': 66, 'métodos': 67, 'inventados': 68, 'sistemáticas.': 69, 'primera': 70, 'referencia': 71, 'publicada': 72, 'por': 73, 'Miller': 74, 'Maloney': 75, 'Communications': 76, 'of': 77, 'the': 78, 'ACM': 79, '1963.\n\nLa': 80, 'consideración': 81, 'certificación': 82, 'seguridad': 83, 'equipos': 84, 'aviación.': 85, 'Las': 86, 'pautas': 87, 'indican': 88, 'aviación': 89, 'están': 90, 'certificados': 91, 'Administración': 92, 'Federal': 93, 'Aviación': 94, '(FAA)': 95, 'documentan': 96, 'DO-178B3\u200b': 97, 'DO-178C.\u200b': 98, 'Es': 99, 'más,': 100, 'máxima': 101, 'requisito': 102, 'estándares': 103, 'modernos': 104, 'ISO': 105, '26262': 106, 'o': 107, 'ICE': 108, '61508.': 109}
        with open('ct.txt') as file:
            self.text_5 = file.read()
        self.compressed_5 = [1, 2, 3, 4, 5, 6, 7, 8, 5, 9, 3, 10, 11, 12, 5, 13, 14, 15, 16, 3, 17, 18, 19, 20, 21, 22, 23, 17, 18, 19, 24, 25, 26, 27, 28, 29, 30, 31, 32, 23, 33, 25, 26, 34, 35, 36, 37, 38, 3, 39, 40, 5, 41, 22, 42, 43, 44, 28, 45, 46, 47, 48, 49, 50, 3, 51, 52, 53, 22, 42, 54, 55, 5, 56, 5, 57, 14, 42, 58, 3, 4, 5, 9, 3, 26, 59, 60, 3, 61, 62, 48, 15, 63, 64, 48, 17, 65, 66, 15, 47, 5, 67, 68, 69, 70, 3, 71, 72, 73, 66, 31, 74, 75, 3, 25, 76, 77, 62, 14, 25, 78, 79, 62, 48, 17, 9, 3, 80, 70, 3, 17, 9, 3, 81, 82, 3, 26, 5, 83, 84, 85, 86, 87, 88, 89, 57, 90, 91, 48, 15, 92, 26, 93, 94, 28, 95, 96, 5, 97, 98, 46, 47, 48, 15, 99, 3, 100, 101, 22, 102, 36, 103, 5, 36, 104, 3, 105, 106, 28, 22, 67, 107, 93, 108, 109, 110, 5, 111, 112, 26, 113, 114, 5, 115, 19, 116, 117, 5, 19, 118, 119, 120, 121, 25, 122, 3, 123, 124, 43, 23, 31, 125, 126, 127, 48, 17, 65, 66, 15, 47, 5, 67, 68, 128, 15, 129, 15, 47, 48, 67, 130, 3, 131, 132, 3, 97, 133, 134, 3, 67, 107, 135, 15, 136, 137, 138, 107, 139, 140, 36, 116, 117, 141, 142, 143, 144, 28, 145, 146, 96, 36, 116, 117, 147, 25, 26, 14, 148, 59, 149, 5, 150, 151, 152, 153, 36, 154, 5, 42, 155, 156, 129, 67, 68, 157, 158, 159, 48, 15, 160, 157, 161, 23, 15, 116, 3, 162, 163, 164, 15, 165, 5, 22, 166, 167, 168, 116, 169, 170, 171, 172, 3, 173, 5, 174, 175, 176, 177, 178, 179, 59, 11, 180, 109, 17, 181, 23, 17, 182, 3, 71, 183, 66, 31, 184, 26, 113, 185, 28, 186, 23, 187, 188, 189, 22, 120, 190, 36, 191, 3, 192, 3, 15, 136, 193, 194, 3, 15, 195, 178, 121, 156, 48, 148, 59, 196, 151, 17, 197, 48, 198, 126, 199, 3, 200, 67, 201, 202, 3, 203, 3, 25, 204, 205, 185, 28, 206, 207, 23, 187, 208, 152, 209, 210, 36, 103, 3, 67, 50, 59, 211, 126, 212, 213, 214, 215, 3, 216, 217, 218, 219, 93, 220, 221, 36, 222, 5, 223, 3, 98, 112, 26, 152, 224, 25, 225, 5, 226, 109, 36, 227, 19, 228, 206, 149, 5, 229, 25, 26, 230, 36, 231, 3, 232, 151, 67, 233, 68, 220, 97, 234, 235, 14, 25, 78, 236, 78, 237, 93, 238, 239, 3, 15, 240, 241, 242, 243, 244, 5, 206, 245, 3, 50, 246, 247, 15, 248, 3, 249, 3,
                             100, 22, 250, 23, 251, 67, 252, 3, 201, 253, 23, 254, 59, 255, 28, 256, 257, 59, 17, 258, 5, 17, 259, 48, 17, 9, 3, 260, 9, 3, 26, 250, 23, 17, 261, 3, 17, 262, 3, 42, 263, 264, 28, 97, 265, 3, 266, 5, 267, 23, 268, 175, 2, 121, 201, 269, 42, 43, 270, 93, 271, 272, 3, 273, 274, 275, 276, 277, 278, 279, 280, 281, 3, 268, 282, 283, 17, 9, 3, 26, 48, 284, 28, 190, 17, 285, 286, 121, 17, 287, 3, 288, 3, 17, 9, 3, 289, 290, 17, 9, 3, 26, 291, 292, 293, 17, 285, 286, 121, 17, 287, 3, 273, 294, 17, 295, 52, 190, 42, 296, 3, 297, 298, 299, 300, 121, 17, 301, 302, 5, 303, 26, 5, 304, 305, 121, 25, 122, 3, 33, 121, 306, 307, 19, 266, 5, 121, 308, 309, 25, 310, 3, 71, 311, 3, 26, 5, 83, 312, 14, 313, 3, 25, 2, 3, 26, 5, 83, 59, 314, 152, 315, 141, 316, 48, 15, 317, 5, 116, 3, 26, 3, 103, 318, 319, 320, 213, 321, 57, 93, 322, 28, 306, 36, 323, 324, 5, 325, 3, 43, 23, 326, 327, 328, 329, 330, 88, 331, 332, 333, 57, 334, 335, 23, 17, 336, 3, 337, 48, 67, 338, 3, 26, 3, 103, 339, 112, 26, 34, 3, 56, 93, 242, 97, 23, 340, 341, 342, 5, 343, 344, 141, 23, 31, 345, 346, 347, 348, 5, 347, 349, 56, 350, 36, 351, 3, 352, 56, 353, 5, 17, 354, 3, 9, 3, 26, 56, 355, 356, 36, 357, 3, 358, 3, 359, 3, 360, 361, 22, 322, 56, 23, 15, 160, 3, 347, 362, 363, 88, 331, 332, 333, 56, 364, 335, 23, 17, 336, 3, 365, 48, 67, 354, 3, 9, 3, 265, 3, 266, 3, 103, 366, 367, 28, 124, 5, 273, 26, 5, 43, 368, 369, 370, 333, 371, 372, 335, 23, 17, 336, 3, 373, 374, 375, 48, 67, 338, 3, 9, 22, 93, 220, 97, 23, 341, 342, 5, 376, 377, 378, 379, 380, 381, 23, 17, 382, 3, 383, 23, 384, 88, 375, 93, 322, 28, 273, 304, 3, 385, 5, 93, 386, 23, 387, 388, 28, 273, 389, 5, 390, 391, 19, 392, 3, 393, 88, 394, 330, 88, 331, 332, 333, 88, 375, 395, 335, 23, 17, 336, 3, 88, 396, 90, 397, 48, 15, 116, 3, 9, 3, 26, 5, 56, 48, 67, 338, 3, 398, 399, 15, 129, 57, 400, 67, 338, 28, 273, 265, 3, 266, 5, 267, 401, 399, 156, 129, 56, 400, 15, 219, 3, 402, 5, 97, 268, 282, 283, 56, 93, 220, 71, 109, 57, 5, 403, 83, 3, 268, 404, 405, 56, 152, 406, 109, 67, 354, 3, 9, 407, 121, 408, 56, 355]
        self.values_5 = {'Contenedores,': 1, 'sistemas': 2, 'de': 3, 'contenerización': 4, 'y': 5, 'orquestadores\nSistemas\nCloud': 6, 'computing,': 7, 'Infraestructura\nContenerización': 8, 'orquestación': 9, 'contenedores\nLos': 10, 'términos': 11, '«contenedor»': 12, '«contenerización»': 13, 'son': 14, 'un': 15, 'préstamo': 16, 'la': 17, 'industria': 18, 'del': 19, 'transporte.': 20, 'Mientras': 21, 'que': 22, 'en': 23, 'transporte': 24, 'los': 25, 'contenedores': 26, 'sirven': 27, 'para': 28, 'separar': 29, 'físicamente': 30, 'diferentes': 31, 'cargas,': 32, 'IT': 33, 'virtuales': 34, 'empaquetan': 35, 'el': 36, 'código,': 37, 'archivos': 38, 'configuración,': 39, 'librerías': 40, 'dependencias': 41, 'las': 42, 'aplicaciones': 43, 'necesitan': 44, 'ejecutarse.': 45, 'Un': 46, 'contenedor': 47, 'es': 48, 'otra': 49, 'forma': 50, 'virtualización,': 51, 'al': 52, 'igual': 53, 'máquinas': 54, 'virtuales,': 55, 'Docker': 56, 'Kubernetes': 57, 'herramientas': 58, 'más': 59, 'populares.\n\nÍndice': 60, 'contenidos\n1': 61, '¿Qué': 62, 'contenedor?\n1.1': 63, '¿Cuál': 64, 'diferencia': 65, 'entre': 66, 'una': 67, 'máquina': 68, 'virtual?\n1.2': 69, 'Ventajas': 70, 'usar': 71, 'contenedores\n1.2.1': 72, 'Portabilidad': 73, 'entornos\n1.2.2': 74, 'Productividad': 75, 'desarrolladores\n1.2.3': 76, 'Eficiencia\n1.3': 77, 'microservicios': 78, 'contenerizados?\n2': 79, 'contenedores?\n2.1': 80, 'contenedores\n3': 81, 'Sistema': 82, 'orquestadores': 83, 'populares\n3.1': 84, 'Kubernetes\n3.2': 85, 'Docker\n3.3': 86, 'Nomad\n3.4': 87, 'Apache': 88, 'Mesos\n4': 89, 'vs': 90, 'Docker\n¿Qué': 91, 'contenedor?\nLos': 92, 'se': 93, 'usan': 94, 'construir,': 95, 'compartir': 96, 'ejecutar': 97, 'aplicaciones.': 98, 'paquete': 99, 'software': 100, 'ligero': 101, 'contiene': 102, 'código': 103, 'resto': 104, 'elementos': 105, 'necesarios': 106, 'aplicación': 107, 'ejecute': 108, 'con': 109, 'rapidez': 110, 'fiabilidad.': 111, 'Los': 112, 'están': 113, 'aislados': 114, 'abstraídos': 115, 'sistema': 116, 'operativo': 117, 'servidor.': 118, 'Esto': 119, 'permite': 120, 'a': 121, 'equipos': 122, 'DevOps': 123, 'desplegar': 124, 'entornos': 125, 'sin': 126, 'problemas.\n\n¿Cuál': 127, 'virtual?\nPor': 128, 'lado,': 129, 'instancia': 130, 'virtualización': 131, 'capaz': 132, 'instancias': 133, 'separadas': 134, 'usando': 135, 'único': 136, 'OS.': 137, 'La': 138, 'contenerizada': 139, 'reconoce': 140, 'como': 141, 'si': 142, 'fuera': 143, 'exclusivamente': 144, 'ella.': 145, 'Al': 146, 'host,': 147, 'mucho': 148, 'ligeros': 149, 'eficientes.': 150, 'Además,': 151, 'también': 152, 'simplifican': 153, 'mantenimiento': 154, 'actualizaciones.\n\nPor': 155, 'otro': 156, 'virtual': 157, 'o': 158, 'VM': 159, 'entorno': 160, 'creado': 161, 'hardware': 162, 'físico': 163, 'mediante': 164, 'hipervisor': 165, 'tiene': 166, 'su': 167, 'propio': 168, 'operativo,': 169, 'CPU,': 170, 'memoria,': 171, 'interfaz': 172, 'red': 173, 'almacenamiento.': 174, 'En': 175, 'nuestro': 176, 'glosario': 177, 'cloud': 178, 'recogemos': 179, 'relacionados': 180, 'computación': 181, 'nube.\n\nVentajas': 182, 'contenedores\nPortabilidad': 183, 'entornos\nLos': 184, 'construidos': 185, 'ejecutarse': 186, 'cualquier': 187, 'entorno;': 188, 'lo': 189, 'reducir': 190, 'riesgo': 191, 'dependencia': 192, 'proveedor.': 193, 'Moverlos': 194, 'servicio': 195, 'fácil.': 196, 'portabilidad': 197, 'posible': 198, 'necesidad': 199, 'reescribir': 200, 'gran': 201, 'cantidad': 202, 'código.\n\nProductividad': 203, 'desarrolladores\nAl': 204, 'estar': 205, 'ser': 206, 'ejecutados': 207, 'entorno,': 208, 'permiten': 209, 'escribir': 210, 'consistente': 211, 'preocuparse': 212, 'por': 213,
                         'posibles': 214, 'problemas': 215, 'compatibilidad.': 216, 'De': 217, 'este': 218, 'modo': 219, 'puede': 220, 'acelerar': 221, 'desarrollo': 222, 'despliegue': 223, 'facilitan': 224, 'cambios': 225, 'actualizaciones': 226, 'paso': 227, 'tiempo.\n\nEficiencia\nAl': 228, 'efímeros,': 229, 'reducen': 230, 'consumo': 231, 'recursos.': 232, 'única': 233, 'múltiples': 234, 'contenedores.\n\n¿Qué': 235, 'contenerizados?\nLos': 236, 'contenerizados': 237, 'ejecutan': 238, 'dentro': 239, 'contenedor,': 240, 'pero': 241, 'pueden': 242, 'desplegarse,': 243, 'actualizarse': 244, 'retirados': 245, 'independiente.': 246, 'Es': 247, 'enfoque': 248, 'arquitectura': 249, 'consiste': 250, 'dividir': 251, 'solución': 252, 'tamaño': 253, 'fragmentos': 254, 'pequeños': 255, 'impulsar': 256, 'aún': 257, 'productividad': 258, 'eficiencia.\n\n¿Qué': 259, 'contenedores?\nLa': 260, 'automatización': 261, 'mayoría': 262, 'operaciones': 263, 'necesarias': 264, 'cargas': 265, 'trabajo': 266, 'servicios': 267, 'contenedores.': 268, 'escala,': 269, 'contenerizadas': 270, 'vuelven': 271, 'difíciles': 272, 'gestionar': 273, 'manualmente': 274, 'porque': 275, 'suelen': 276, 'incluir': 277, 'cientos': 278, 'e': 279, 'incluso': 280, 'miles': 281, 'Así': 282, 'que,': 283, 'esencial': 284, 'complejidad': 285, 'operacional': 286, 'hora': 287, 'ejecutarlos.\n\nVentajas': 288, 'contenedores\nEn': 289, 'resumen,': 290, 'ofrece': 291, 'diversos': 292, 'beneficios:\n\nReduce': 293, 'contenedores.\nMejora': 294, 'seguridad': 295, 'posibilidades': 296, 'cometer': 297, 'errores': 298, 'humanos,': 299, 'gracias': 300, 'automatización.\nPermite': 301, 'escalar': 302, 'reiniciar': 303, 'clústers': 304, 'automáticamente.\nAyuda': 305, 'automatizar': 306, 'parte': 307, 'aprovechar': 308, 'todos': 309, 'beneficios': 310, 'contenedores.\nSistema': 311, 'populares\nEstos': 312, 'algunos': 313, 'populares.\n\nKubernetes\nKubernetes,': 314, 'conocido': 315, 'K8s,': 316, 'orquestador': 317, 'abierto,': 318, 'originalmente': 319, 'diseñado': 320, 'Google.': 321, 'usa': 322, 'despliegue,': 323, 'escalado': 324, 'gestión': 325, 'contenedores.\n\nDesarrollador:': 326, 'Cloud': 327, 'Native': 328, 'Computing': 329, 'Foundation.\n\nLicencia:': 330, 'License': 331, '2.0.\n\nÚltima': 332, 'versión:': 333, '1.22.2.\n\nMás': 334, 'detalles': 335, 'web': 336, 'Kubernetes.\n\nDocker\nDocker': 337, 'plataforma': 338, 'abierto.': 339, 'ordenadores': 340, 'Linux,': 341, 'Windows': 342, 'MacOS,': 343, 'así': 344, 'ubicaciones': 345, '—on-premises,': 346, 'nube': 347, 'pública': 348, 'privada—.': 349, 'incluye': 350, 'motor': 351, 'Docker,': 352, 'Engine,': 353, 'herramienta': 354, 'Swarm.': 355, 'Descubre': 356, 'caso': 357, 'éxito': 358, 'uno': 359, 'nuestros': 360, 'clientes': 361, 'privada.\n\nDesarrollador:': 362, 'Docker.\n\nLicencia:': 363, '20.10.7.\n\nMás': 364, 'Docker.\n\nNomad\nNomad': 365, 'abierto': 366, 'diseñada': 367, 'no': 368, 'contenerizadas.\n\nDesarrollador:': 369, 'HashiCorp.\n\nÚltima': 370, 'Nomad': 371, '1.2.2.\n\nMás': 372, 'Nomad.\n\nApache': 373, 'Mesos\nApache': 374, 'Mesos': 375, 'Mac': 376, 'OS': 377, 'X.': 378, 'Fue': 379, 'desarrollada': 380, 'inicialmente': 381, 'Universidad': 382, 'California': 383, 'Berkeley.': 384, 'nodos': 385, 'ejecuta': 386, 'cada': 387, 'nodo': 388, 'recursos': 389, 'planificar': 390, 'tareas': 391, 'centro': 392, 'datos.\n\nDesarrollador:': 393, 'Software': 394, '1.11.0.\n\nMás': 395, 'Mesos.\n\nKubernetes': 396, 'Docker\nKubernetes': 397, 'contenerización.': 398, 'Por': 399, 'proporciona': 400, 'contenerizados.': 401, 'construir': 402, 'otros': 403, 'No': 404, 'obstante,': 405, 'cuenta': 406, 'equivalente': 407, 'Kubernetes:': 408}

    def test_compress_1(self):
        compress = Compress()
        compressed, values = compress.compress(self.text_1)
        self.assertDictEqual(values, self.values_1)
        self.assertListEqual(compressed, self.compressed_1)

    def test_uncompress_1(self):
        compress = Compress()
        self.assertEqual(compress.uncompress(
            self.compressed_1, self.values_1), self.text_1)

    def test_compress_2(self):
        compress = Compress()
        compressed, values = compress.compress(self.text_2)
        self.assertDictEqual(values, self.values_2)
        self.assertListEqual(compressed, self.compressed_2)

    def test_uncompress_2(self):
        compress = Compress()
        self.assertEqual(compress.uncompress(
            self.compressed_2, self.values_2), self.text_2)

    def test_compress_3(self):
        compress = Compress()
        compressed, values = compress.compress(self.text_3)
        self.assertDictEqual(values, self.values_3)
        self.assertListEqual(compressed, self.compressed_3)

    def test_uncompress_3(self):
        compress = Compress()
        self.assertEqual(compress.uncompress(
            self.compressed_3, self.values_3), self.text_3)

    def test_compress_4(self):
        compress = Compress()
        compressed, values = compress.compress(self.text_4)
        self.assertDictEqual(values, self.values_4)
        self.assertListEqual(compressed, self.compressed_4)

    def test_uncompress_4(self):
        compress = Compress()
        self.assertEqual(compress.uncompress(
            self.compressed_4, self.values_4), self.text_4)

    def test_compress_5(self):
        compress = Compress()
        compressed, values = compress.compress(self.text_5)
        self.assertDictEqual(values, self.values_5)
        self.assertListEqual(compressed, self.compressed_5)

    def test_uncompress_5(self):
        compress = Compress()
        self.assertEqual(compress.uncompress(
            self.compressed_5, self.values_5), self.text_5)


if __name__ == '__main__':
    unittest.main()
